// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: stream-camera.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameId    string `protobuf:"bytes,1,opt,name=cameId,proto3" json:"cameId,omitempty"`
	Img       []byte `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	TimeFrame int64  `protobuf:"varint,3,opt,name=timeFrame,proto3" json:"timeFrame,omitempty"`
}

func (x *CameReq) Reset() {
	*x = CameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_camera_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameReq) ProtoMessage() {}

func (x *CameReq) ProtoReflect() protoreflect.Message {
	mi := &file_stream_camera_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameReq.ProtoReflect.Descriptor instead.
func (*CameReq) Descriptor() ([]byte, []int) {
	return file_stream_camera_proto_rawDescGZIP(), []int{0}
}

func (x *CameReq) GetCameId() string {
	if x != nil {
		return x.CameId
	}
	return ""
}

func (x *CameReq) GetImg() []byte {
	if x != nil {
		return x.Img
	}
	return nil
}

func (x *CameReq) GetTimeFrame() int64 {
	if x != nil {
		return x.TimeFrame
	}
	return 0
}

type CameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameId string `protobuf:"bytes,1,opt,name=cameId,proto3" json:"cameId,omitempty"`
}

func (x *CameRsp) Reset() {
	*x = CameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_camera_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameRsp) ProtoMessage() {}

func (x *CameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_stream_camera_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameRsp.ProtoReflect.Descriptor instead.
func (*CameRsp) Descriptor() ([]byte, []int) {
	return file_stream_camera_proto_rawDescGZIP(), []int{1}
}

func (x *CameRsp) GetCameId() string {
	if x != nil {
		return x.CameId
	}
	return ""
}

type VeiwReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameId string `protobuf:"bytes,1,opt,name=cameId,proto3" json:"cameId,omitempty"`
}

func (x *VeiwReq) Reset() {
	*x = VeiwReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_camera_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VeiwReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VeiwReq) ProtoMessage() {}

func (x *VeiwReq) ProtoReflect() protoreflect.Message {
	mi := &file_stream_camera_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VeiwReq.ProtoReflect.Descriptor instead.
func (*VeiwReq) Descriptor() ([]byte, []int) {
	return file_stream_camera_proto_rawDescGZIP(), []int{2}
}

func (x *VeiwReq) GetCameId() string {
	if x != nil {
		return x.CameId
	}
	return ""
}

type VeiwRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameId    string `protobuf:"bytes,1,opt,name=cameId,proto3" json:"cameId,omitempty"`
	Img       []byte `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	TimeFrame int64  `protobuf:"varint,3,opt,name=timeFrame,proto3" json:"timeFrame,omitempty"`
}

func (x *VeiwRsp) Reset() {
	*x = VeiwRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_camera_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VeiwRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VeiwRsp) ProtoMessage() {}

func (x *VeiwRsp) ProtoReflect() protoreflect.Message {
	mi := &file_stream_camera_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VeiwRsp.ProtoReflect.Descriptor instead.
func (*VeiwRsp) Descriptor() ([]byte, []int) {
	return file_stream_camera_proto_rawDescGZIP(), []int{3}
}

func (x *VeiwRsp) GetCameId() string {
	if x != nil {
		return x.CameId
	}
	return ""
}

func (x *VeiwRsp) GetImg() []byte {
	if x != nil {
		return x.Img
	}
	return nil
}

func (x *VeiwRsp) GetTimeFrame() int64 {
	if x != nil {
		return x.TimeFrame
	}
	return 0
}

type MoveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HwId      string `protobuf:"bytes,1,opt,name=hwId,proto3" json:"hwId,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	TimeMove  int64  `protobuf:"varint,3,opt,name=timeMove,proto3" json:"timeMove,omitempty"`
}

func (x *MoveReq) Reset() {
	*x = MoveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_camera_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveReq) ProtoMessage() {}

func (x *MoveReq) ProtoReflect() protoreflect.Message {
	mi := &file_stream_camera_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveReq.ProtoReflect.Descriptor instead.
func (*MoveReq) Descriptor() ([]byte, []int) {
	return file_stream_camera_proto_rawDescGZIP(), []int{4}
}

func (x *MoveReq) GetHwId() string {
	if x != nil {
		return x.HwId
	}
	return ""
}

func (x *MoveReq) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *MoveReq) GetTimeMove() int64 {
	if x != nil {
		return x.TimeMove
	}
	return 0
}

type MoveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction string `protobuf:"bytes,1,opt,name=direction,proto3" json:"direction,omitempty"`
	TimeMove  int64  `protobuf:"varint,2,opt,name=timeMove,proto3" json:"timeMove,omitempty"`
}

func (x *MoveRsp) Reset() {
	*x = MoveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_camera_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRsp) ProtoMessage() {}

func (x *MoveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_stream_camera_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRsp.ProtoReflect.Descriptor instead.
func (*MoveRsp) Descriptor() ([]byte, []int) {
	return file_stream_camera_proto_rawDescGZIP(), []int{5}
}

func (x *MoveRsp) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *MoveRsp) GetTimeMove() int64 {
	if x != nil {
		return x.TimeMove
	}
	return 0
}

type MoveRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HwId      string `protobuf:"bytes,1,opt,name=hwId,proto3" json:"hwId,omitempty"`
	RegisTime int64  `protobuf:"varint,2,opt,name=regisTime,proto3" json:"regisTime,omitempty"`
}

func (x *MoveRegisterReq) Reset() {
	*x = MoveRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_camera_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRegisterReq) ProtoMessage() {}

func (x *MoveRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_stream_camera_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRegisterReq.ProtoReflect.Descriptor instead.
func (*MoveRegisterReq) Descriptor() ([]byte, []int) {
	return file_stream_camera_proto_rawDescGZIP(), []int{6}
}

func (x *MoveRegisterReq) GetHwId() string {
	if x != nil {
		return x.HwId
	}
	return ""
}

func (x *MoveRegisterReq) GetRegisTime() int64 {
	if x != nil {
		return x.RegisTime
	}
	return 0
}

var File_stream_camera_proto protoreflect.FileDescriptor

var file_stream_camera_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x07, 0x43, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x07, 0x43, 0x61, 0x6d, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x07, 0x56,
	0x65, 0x69, 0x77, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x51,
	0x0a, 0x07, 0x56, 0x65, 0x69, 0x77, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x69, 0x6d, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x22, 0x57, 0x0a, 0x07, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x77, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x22, 0x43, 0x0a, 0x07, 0x4d, 0x6f,
	0x76, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x22,
	0x43, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x77, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x32, 0xa6, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x09, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x08, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x08, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01, 0x12,
	0x1e, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x08, 0x2e, 0x56, 0x65, 0x69, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x08, 0x2e, 0x56, 0x65, 0x69, 0x77, 0x52, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x1c, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x08, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x08, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x0c, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x08, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x42, 0x13, 0x5a,
	0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stream_camera_proto_rawDescOnce sync.Once
	file_stream_camera_proto_rawDescData = file_stream_camera_proto_rawDesc
)

func file_stream_camera_proto_rawDescGZIP() []byte {
	file_stream_camera_proto_rawDescOnce.Do(func() {
		file_stream_camera_proto_rawDescData = protoimpl.X.CompressGZIP(file_stream_camera_proto_rawDescData)
	})
	return file_stream_camera_proto_rawDescData
}

var file_stream_camera_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_stream_camera_proto_goTypes = []interface{}{
	(*CameReq)(nil),         // 0: CameReq
	(*CameRsp)(nil),         // 1: CameRsp
	(*VeiwReq)(nil),         // 2: VeiwReq
	(*VeiwRsp)(nil),         // 3: VeiwRsp
	(*MoveReq)(nil),         // 4: MoveReq
	(*MoveRsp)(nil),         // 5: MoveRsp
	(*MoveRegisterReq)(nil), // 6: MoveRegisterReq
}
var file_stream_camera_proto_depIdxs = []int32{
	0, // 0: StreamCameService.streaming:input_type -> CameReq
	2, // 1: StreamCameService.view:input_type -> VeiwReq
	4, // 2: StreamCameService.move:input_type -> MoveReq
	6, // 3: StreamCameService.moveRegister:input_type -> MoveRegisterReq
	1, // 4: StreamCameService.streaming:output_type -> CameRsp
	3, // 5: StreamCameService.view:output_type -> VeiwRsp
	5, // 6: StreamCameService.move:output_type -> MoveRsp
	5, // 7: StreamCameService.moveRegister:output_type -> MoveRsp
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_stream_camera_proto_init() }
func file_stream_camera_proto_init() {
	if File_stream_camera_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stream_camera_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_camera_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_camera_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VeiwReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_camera_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VeiwRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_camera_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_camera_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_camera_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stream_camera_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stream_camera_proto_goTypes,
		DependencyIndexes: file_stream_camera_proto_depIdxs,
		MessageInfos:      file_stream_camera_proto_msgTypes,
	}.Build()
	File_stream_camera_proto = out.File
	file_stream_camera_proto_rawDesc = nil
	file_stream_camera_proto_goTypes = nil
	file_stream_camera_proto_depIdxs = nil
}
